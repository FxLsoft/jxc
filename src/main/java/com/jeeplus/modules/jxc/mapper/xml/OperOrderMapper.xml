<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.jxc.mapper.OperOrderMapper">

	<sql id="operOrderBaseColums">
		a.id AS "id",
		a.no AS "no",
		a.agency_id AS "agency.id",
		a.store_id AS "store.id",
		a.customer_id AS "customer.id",
		a.type AS "type",
		a.status AS "status",
		a.source AS "source",
		a.total_price AS "totalPrice",
		a.real_price AS "realPrice",
		a.real_pay AS "realPay",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
    
	<sql id="operOrderColumns">
		a.id AS "id",
		a.no AS "no",
		a.agency_id AS "agency.id",
		a.store_id AS "store.id",
		a.customer_id AS "customer.id",
		a.type AS "type",
		a.status AS "status",
		a.source AS "source",
		a.total_price AS "totalPrice",
		a.real_price AS "realPrice",
		a.real_pay AS "realPay",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
				
				
		agency.name AS "agency.name",
		agency.area AS "agency.area",
		agency.address AS "agency.address",
		agency.linkman AS "agency.linkman",
		agency.phone AS "agency.phone",
		agency.plate_number AS "agency.plateNumber",
		customer.name AS "customer.name",
		customer.phone AS "customer.phone",
		customer.area AS "customer.area",
		customer.address AS "customer.address",
		store.name AS "store.name",
		updateBy.name AS "updateBy.name",
		createBy.name AS "createBy.name"
	</sql>
	
	<sql id="operOrderJoins">
		
		LEFT JOIN c_agency agency ON agency.id = a.agency_id
		LEFT JOIN c_store store ON store.id = a.store_id
		LEFT JOIN c_customer customer ON customer.id = a.customer_id
		LEFT JOIN sys_user updateBy ON updateBy.id = a.update_by
		LEFT JOIN sys_user createBy ON createBy.id = a.create_by
	</sql>
	
    
	<select id="get" resultType="OperOrder" >
		SELECT 
			<include refid="operOrderColumns"/>
		FROM c_oper_order a
		<include refid="operOrderJoins"/>
		WHERE a.id = #{id}
	</select>
	<select id="findListByWhere" resultType="OperOrder" >
		SELECT 
			<include refid="operOrderBaseColums"/>
		FROM c_oper_order a
		<where>
			a.del_flag = '0'
			AND a.store_id = #{storeId}
			AND a.create_date BETWEEN #{startDate} AND #{endDate}
			AND (a.status = '1' OR a.status = '3')
		</where>
	</select>
	<select id="findList" resultType="OperOrder" >
		SELECT 
			<include refid="operOrderColumns"/>
		FROM c_oper_order a
		<include refid="operOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="no != null and no != ''">
				AND a.no LIKE 
					<if test="dbName == 'oracle'">'%'||#{no}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{no}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{no},'%')</if>
			</if>
			<if test="agency != null and agency.id != null and agency.id != ''">
				AND a.agency_id = #{agency.id}
			</if>
			<if test="customer != null and customer.id != null and customer.id != ''">
				AND a.customer_id = #{customer.id}
			</if>
			<if test="store != null and store.id != null and store.id != ''">
				AND a.store_id = #{store.id}
			</if>
			<if test="type != null and type != ''">
				AND a.type = #{type}
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			<if test="source != null and source != ''">
				AND a.source = #{source}
			</if>
			<if test="beginTotalPrice != null and endTotalPrice != null ">
				AND a.total_price BETWEEN #{beginTotalPrice} AND #{endTotalPrice}
			</if>
			<if test="realPrice != null and realPrice != ''">
				AND a.real_price = #{realPrice}
			</if>
			<if test="realPay != null and realPay != ''">
				AND a.real_pay = #{realPay}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="OperOrder" >
		SELECT 
			<include refid="operOrderColumns"/>
		FROM c_oper_order a
		<include refid="operOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO c_oper_order(
			id,
			no,
			agency_id,
			customer_id,
			store_id,
			type,
			status,
			source,
			total_price,
			real_price,
			real_pay,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{no},
			#{agency.id},
			#{customer.id},
			#{store.id},
			#{type},
			#{status},
			#{source},
			#{totalPrice},
			#{realPrice},
			#{realPay},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE c_oper_order SET 	
			no = #{no},
			agency_id = #{agency.id},
			customer_id = #{customer.id},
			store_id = #{store.id},
			type = #{type},
			status = #{status},
			source = #{source},
			total_price = #{totalPrice},
			real_price = #{realPrice},
			real_pay = #{realPay},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		UPDATE c_oper_order SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
		<!-- DELETE FROM c_oper_order
		WHERE id = #{id} -->
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE c_oper_order SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="OperOrder" statementType="STATEMENT">
		select * FROM c_oper_order  where ${propertyName} = '${value}' AND del_flag = '0'
	</select>
	
</mapper>