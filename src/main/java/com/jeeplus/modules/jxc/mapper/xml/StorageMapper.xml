<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.jxc.mapper.StorageMapper">
    
	<sql id="storageColumns">
		a.id AS "id",
		a.store_id AS "store.id",
		a.product_id AS "product.id",
		a.price_id AS "price.id",
		a.amount AS "amount",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
				
		store.name AS "store.name",
				
		product.name AS "product.name",
				
		price.cost_price AS "price.costPrice",
		
		price.unit AS "price.unit"
	</sql>
	
	<sql id="storageJoins">
		
		LEFT JOIN c_store store ON store.id = a.store_id
		LEFT JOIN c_product product ON product.id = a.product_id
		LEFT JOIN c_price price ON price.id = a.price_id
	</sql>
	
    
	<select id="get" resultType="Storage" >
		SELECT 
			<include refid="storageColumns"/>
		FROM c_storage a
		<include refid="storageJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Storage" >
		SELECT 
			<include refid="storageColumns"/>
		FROM c_storage a
		<include refid="storageJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="store != null and store.id != null and store.id != ''">
				AND a.store_id = #{store.id}
			</if>
			<if test="product != null and product.id != null and product.id != ''">
				AND a.product_id = #{product.id}
			</if>
			<if test="price != null and price.id != null and price.id != ''">
				AND a.price_id = #{price.id}
			</if>
			<if test="beginAmount != null and endAmount != null ">
				AND a.amount BETWEEN #{beginAmount} AND #{endAmount}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Storage" >
		SELECT 
			<include refid="storageColumns"/>
		FROM c_storage a
		<include refid="storageJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO c_storage(
			id,
			store_id,
			product_id,
			price_id,
			amount,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{store.id},
			#{product.id},
			#{price.id},
			#{amount},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE c_storage SET 	
			store_id = #{store.id},
			product_id = #{product.id},
			price_id = #{price.id},
			amount = #{amount},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM c_storage
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE c_storage SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Storage" statementType="STATEMENT">
		select * FROM c_storage  where ${propertyName} = '${value}'
	</select>
	
</mapper>